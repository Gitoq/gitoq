/**
 * Generated by orval v6.27.1 üç∫
 * Do not edit manually.
 * Gitoq
 * OpenAPI spec version: 1.0.0
 */
import { api } from './api';
export type ApiCliWorkspaceProjects200 = {
  message?: string;
  projects: ExtraLimitedProject[];
};

export type ApiCliUserWorkspaces200 = {
  message?: string;
  workspaces: SuperExtraLimitedWorkspace[];
};

export type ApiCliLogout200 = {
  message?: string;
};

export type ApiCliLogin200 = {
  message?: string;
  token: string;
};

export interface User {
  avatar: string;
  created_at: string;
  default_workspace: number;
  email: string;
  id: number;
  is_banned: boolean;
  is_joined: boolean;
  is_verified: boolean;
  modified_at: string;
  name: string;
  role: UserRole;
  workspaces_count: number;
}

export interface Workspace {
  avatar: string;
  created_at: string;
  description: string;
  id: number;
  is_default: boolean;
  name: string;
  owner: number;
  projects_count: number;
}

export interface Project {
  created_at: string;
  default_env: number;
  envs_count: number;
  id: number;
  licenses_count: number;
  name: string;
  owner: number;
  token: string;
  with_env_example: boolean;
  workspace: number;
}

export interface License {
  created_at: string;
  /** ID */
  id: number;
  is_verified: boolean;
  owner: LimitedUser;
  permissions: LicensePermissions;
  role: LicenseRole;
}

export interface UserFully {
  avatar: string;
  created_at: string;
  default_workspace: Workspace;
  email: string;
  id: number;
  is_banned: boolean;
  is_joined: boolean;
  is_verified: boolean;
  modified_at: string;
  name: string;
  role: UserRole;
  workspaces_count: number;
}

export interface ProjectFully {
  created_at: string;
  default_env: number;
  envs: LimitedEnd[];
  envs_count: number;
  id: number;
  licenses: License[];
  licenses_count: number;
  name: string;
  owner: number;
  token: string;
  user_license: LicensePermissions;
  with_env_example: boolean;
  workspace: number;
}

export interface Env {
  content: string;
  created_at: string;
  id: number;
  is_default: boolean;
  name: string;
  project: number;
  workspace: number;
}

/**
 * @nullable
 */
export type LogInfo = {
  env_name?: string;
  new_name?: string;
  prev_name?: string;
  project_name?: string;
} | null;

export interface Log {
  action: LogActions;
  created_at: string;
  done_by: ExtraLimitedUser;
  effected?: ExtraLimitedUser;
  id: number;
  /** @nullable */
  info: LogInfo;
  /** @nullable */
  project: number | null;
  workspace: number;
}

export interface LimitedWorkspace {
  /** ID */
  id: number;
  is_default: boolean;
  owner: number;
  projects_count: number;
}

export interface ExtraLimitedWorkspace {
  avatar: string;
  /** ID */
  id: number;
  name: string;
  projects_count: number;
}

export interface LimitedProject {
  default_env: number;
  id: number;
  /** name */
  name: string;
  workspace: number;
}

export interface LimitedEnd {
  created_at: string;
  id: number;
  is_default: boolean;
  name: string;
  project: number;
  workspace: number;
}

export interface LimitedUser {
  avatar: string;
  email: string;
  id: number;
  name: string;
}

export interface ExtraLimitedUser {
  email: string;
  id: number;
  name: string;
}

export type ErrorErrors = { [key: string]: any };

export interface Error {
  env?: number;
  errors?: ErrorErrors;
  key?: string;
  message?: string;
  project?: number;
  workspace?: number;
}

export interface Response {
  message?: string;
}

export type UserWorkspacesSelectedWorkspace = {
  avatar: string;
  created_at: string;
  description: string;
  id: number;
  is_default: boolean;
  licenses: LimitedUser[];
  licenses_count: number;
  name: string;
  owner: number;
  projects: LimitedProject[];
  projects_count: number;
};

export interface UserWorkspaces {
  selected_workspace: UserWorkspacesSelectedWorkspace;
  workspaces: ExtraLimitedWorkspace[];
}

export type LicensePermissionsItem = typeof LicensePermissionsItem[keyof typeof LicensePermissionsItem];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const LicensePermissionsItem = {
  EDIT_LICENSE: 'EDIT_LICENSE',
  ADD_LICENSE: 'ADD_LICENSE',
  REMOVE_LICENSE: 'REMOVE_LICENSE',
  EDIT_PROJECT: 'EDIT_PROJECT',
  DELETE_PROJECT: 'DELETE_PROJECT',
  TRANSFER_PROJECT: 'TRANSFER_PROJECT',
  ADD_ENV: 'ADD_ENV',
  DELETE_ENV: 'DELETE_ENV',
  EDIT_ENV: 'EDIT_ENV',
  PULL_ENV: 'PULL_ENV',
  PUSH_ENV: 'PUSH_ENV',
} as const;

export type LicensePermissions = LicensePermissionsItem[];

export type LicenseRole = typeof LicenseRole[keyof typeof LicenseRole];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const LicenseRole = {
  OWNER: 'OWNER',
  MEMBER: 'MEMBER',
} as const;

export type UserRole = typeof UserRole[keyof typeof UserRole];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const UserRole = {
  ADMIN: 'ADMIN',
  USER: 'USER',
} as const;

export type LogActions = typeof LogActions[keyof typeof LogActions];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const LogActions = {
  CREATE_ENV: 'CREATE_ENV',
  REMOVE_ENV: 'REMOVE_ENV',
  UPDATE_ENV: 'UPDATE_ENV',
  PUSH_ENV: 'PUSH_ENV',
  LEFT: 'LEFT',
  UPDATE_LICENSE: 'UPDATE_LICENSE',
  REMOVE_LICENSE: 'REMOVE_LICENSE',
  SEND_LICENSE_REQUEST: 'SEND_LICENSE_REQUEST',
  APPLY_LICENSE_REQUEST: 'APPLY_LICENSE_REQUEST',
  REMOVE_LICENSE_REQUEST: 'REMOVE_LICENSE_REQUEST',
  CREATE_PROJECT: 'CREATE_PROJECT',
  REMOVE_PROJECT: 'REMOVE_PROJECT',
  UPDATE_PROJECT: 'UPDATE_PROJECT',
  SEND_PROJECT_TRANSFER_REQUEST: 'SEND_PROJECT_TRANSFER_REQUEST',
  APPLY_PROJECT_TRANSFER_REQUEST: 'APPLY_PROJECT_TRANSFER_REQUEST',
  CREATE_WORKSPACE: 'CREATE_WORKSPACE',
  UPDATE_WORKSPACE: 'UPDATE_WORKSPACE',
  SEND_WORKSPACE_TRANSFER_REQUEST: 'SEND_WORKSPACE_TRANSFER_REQUEST',
  APPLY_WORKSPACE_TRANSFER_REQUEST: 'APPLY_WORKSPACE_TRANSFER_REQUEST',
  SIGNUP: 'SIGNUP',
  LOGIN: 'LOGIN',
  LOGOUT: 'LOGOUT',
  UPDATE_PROFILE: 'UPDATE_PROFILE',
  UPDATE_PASSWORD: 'UPDATE_PASSWORD',
  RESET_PASSWORD: 'RESET_PASSWORD',
} as const;

export type SessionDeviceType = typeof SessionDeviceType[keyof typeof SessionDeviceType];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SessionDeviceType = {
  PHONE: 'PHONE',
  DESKTOP: 'DESKTOP',
  CLI: 'CLI',
  OTHERS: 'OTHERS',
} as const;

export interface Session {
  created_at: string;
  device_type: SessionDeviceType;
  expires_in: number;
  /** ID */
  id: number;
  long_agent: string;
  modified_at: string;
  short_agent: string;
  user: number;
}

export interface SuperExtraLimitedWorkspace {
  /** ID */
  id: number;
  /** name */
  name: string;
}

export interface ExtraLimitedProject {
  id: number;
  /** name */
  name: string;
  token: string;
}




type SecondParameter<T extends (...args: any) => any> = Parameters<T>[1];


  /**
 * @summary login
 */
export const apiCliLogin = (
    
 options?: SecondParameter<typeof api>,) => {
      return api<ApiCliLogin200>(
      {url: `/cli/login`, method: 'POST'
    },
      options);
    }
  
/**
 * @summary logout
 */
export const apiCliLogout = (
    
 options?: SecondParameter<typeof api>,) => {
      return api<ApiCliLogout200>(
      {url: `/cli/logout`, method: 'DELETE'
    },
      options);
    }
  
/**
 * @summary user workspaces
 */
export const apiCliUserWorkspaces = (
    
 options?: SecondParameter<typeof api>,) => {
      return api<ApiCliUserWorkspaces200>(
      {url: `/cli/user-workspaces`, method: 'GET'
    },
      options);
    }
  
/**
 * @summary workspace projects
 */
export const apiCliWorkspaceProjects = (
    id: number,
 options?: SecondParameter<typeof api>,) => {
      return api<ApiCliWorkspaceProjects200>(
      {url: `/cli/workspace-projects/${id}`, method: 'GET'
    },
      options);
    }
  
export type ApiCliLoginResult = NonNullable<Awaited<ReturnType<typeof apiCliLogin>>>
export type ApiCliLogoutResult = NonNullable<Awaited<ReturnType<typeof apiCliLogout>>>
export type ApiCliUserWorkspacesResult = NonNullable<Awaited<ReturnType<typeof apiCliUserWorkspaces>>>
export type ApiCliWorkspaceProjectsResult = NonNullable<Awaited<ReturnType<typeof apiCliWorkspaceProjects>>>
